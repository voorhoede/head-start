---
import { datocmsRequest } from '@lib/datocms';
import type { SlugPathsQuery, PageQuery, PageRecord, SiteLocale } from '@lib/types/datocms';
import type { PageUrl } from '@lib/types/page-url';
import slugPathsQuery from './paths.query.graphql';
import query from './index.query.graphql';
import Layout from '@layouts/Default.astro';
import Blocks from '@blocks/Blocks.astro';
import type { AnyBlock } from '@blocks/Blocks';
import PreviewModeSubscription from '@components/PreviewMode/PreviewModeSubscription.astro';
import ShareButton from '@components/ShareButton/ShareButton.astro';

export async function getStaticPaths() {
  const data = await datocmsRequest<SlugPathsQuery>({ query: slugPathsQuery });

  return data.pages.flatMap(page => (page.slugs || []).map((slug) => ({
    params: { locale: slug.locale, slug: slug.value }
  })));
}

type Params = {
  locale: SiteLocale;
  slug: string;
}

const { locale, slug } = Astro.params as Params;
const variables = { locale, slug };
const { page } = await datocmsRequest<PageQuery>({ query, variables }) as { page: PageRecord };
const pageUrls = (page._allSlugLocales || []).map(slug => ({ locale: slug.locale, pathname: `/${slug.locale}/${slug.value}/` })) as PageUrl[];
---

<Layout 
  pageUrls={pageUrls}
  seoMetaTags={page._seoMetaTags}
>
  <PreviewModeSubscription query={ query } variables={ variables }  />
  <h1>{page.title}</h1>
  <Blocks blocks={page.bodyBlocks as AnyBlock[] } />
  <ShareButton />
</Layout>
