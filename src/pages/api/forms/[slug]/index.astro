---
import { getEntry } from '@lib/content';
import { parseFormSubmission } from '@lib/forms/parse';
import Form from '@components/Form/Form.astro';
import handleFormSubmission from './_action';

export const prerender = false;

const headers = Object.fromEntries(Astro.request.headers);
const { slug } = Astro.params;

if (Astro.request.method !== 'POST' || !headers.referer || !slug) {
  return Astro.rewrite('/404');
}

const form = await getEntry('Forms', slug);
let formErrors: Record<string, string> = {};
let formValues: Record<string, string> = {};

if (form) {
  const { success, values, errors } = await parseFormSubmission({
    form: form.data,
    formData: await Astro.request.formData(),
    requestHeaders: Astro.request.headers,
  });
  formValues = values;
  formErrors = errors;

  if (!success) {
    Astro.response.status = 500;
  }
  await handleFormSubmission({ success, values, errors });
} else {
  Astro.response.status = 500;
}
---

{!form ? (
  <p>
    Form "{slug}" not found.
  </p>
) : Object.keys(formErrors).length > 0 ? (
  <Form
    slug={slug}
    formFields={form.data.formFields}
    errors={formErrors}
    formValues={formValues}
  />
) : (
  <p>
    <em>Success!</em> 
    The form has been submitted.
  </p>
)}

