---
import type { AnyBlock, BlockContext } from './Blocks';
import EmbedBlock from './EmbedBlock/EmbedBlock.astro';
import ImageBlock from './ImageBlock/ImageBlock.astro';
import PagePartialBlock from './PagePartialBlock/PagePartialBlock.astro';
import TableBlock from './TableBlock/TableBlock.astro';
import TextBlock from './TextBlock/TextBlock.astro';
import TextImageBlock from './TextImageBlock/TextImageBlock.astro';
import VideoEmbedBlock from './VideoEmbedBlock/VideoEmbedBlock.astro';

const blocksByTypename = {
  EmbedBlockRecord: EmbedBlock,
  ImageBlockRecord: ImageBlock,
  PagePartialBlockRecord: PagePartialBlock,
  TableBlockRecord: TableBlock,
  TextBlockRecord: TextBlock,
  TextImageBlockRecord: TextImageBlock,
  VideoEmbedBlockRecord: VideoEmbedBlock,
};

interface Props {
  blocks: AnyBlock[];
  location: BlockContext['location'];
}
const { blocks, location } = Astro.props;
---
{ blocks.map((block, index) => {
  const context: BlockContext = { location, index };
  const typename = block.__typename as keyof typeof blocksByTypename;
  const Block = blocksByTypename[typename];
  return Block
    // @ts-ignore next line
    ? <Block { block } { context } />
    : <script define:vars={{ typename }} is:inline>
        console.log(`No Block found for "${typename}"`);
    </script>;
})}
