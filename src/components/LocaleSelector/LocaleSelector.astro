---
import { getLocale, getLocaleName, locales, t } from '@lib/i18n';
import type { SiteLocale } from '@lib/datocms/types';
import type { PageUrl } from '@lib/seo';
import UnstyledList from '@components/UnstyledList/UnstyledList.astro';
import '@assets/a11y.css';

export interface Props {
  pageUrls: PageUrl[];
}
const { pageUrls } = Astro.props;

const activeLocale = getLocale();
const getPageHref = (locale: SiteLocale) => {
  const pageUrl = pageUrls.find((pageUrl) => pageUrl.locale === locale);
  return pageUrl
    ? new URL(pageUrl.pathname, Astro.site)
    : new URL(`/${locale}/`, Astro.site);
};
const instanceId = Math.random().toString(36).substring(2);
const titleHtmlId = `locale-selector-title-${instanceId}`;
---

<locale-selector>
  <nav aria-labelledby={titleHtmlId}>
    <span id={titleHtmlId} class="a11y-sr-only">
      {t('select_language')}
    </span>
    <UnstyledList>
      {
        locales.map((locale) => (
          <li>
            <a
              hreflang={locale}
              href={getPageHref(locale as SiteLocale)}
              lang={locale}
              aria-current={locale === activeLocale ? 'page' : 'false'}
              aria-label={getLocaleName(locale)}
            >
              <abbr title={getLocaleName(locale)}>{locale}</abbr>
            </a>
          </li>
        ))
      }
    </UnstyledList>
  </nav>
</locale-selector>

<script src="./LocaleSelector.client.ts"></script>

<style>
  /* basic styling, can be removed */
  li {
    display: inline-block;
    margin-inline: 5px;
  }
</style>
